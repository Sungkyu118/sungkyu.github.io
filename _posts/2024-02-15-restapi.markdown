---
layout: post
title: REST API
date: 2024-02-16 13:27:00 +0900
category: etc
permalink: /restapi
tags: [Rest API]
---

# REST API?

## 개요

REST API(Representational State Transfer Application Programming Interface)는 네트워크 아키텍처 원리를 기반으로 한 웹 서비스를 위한 인터페이스입니다. 이를 통해 클라이언트와 서버 간의 통신이 이루어집니다. REST API는 자원(Resource)을 URI로 표현하고, HTTP 메서드(GET, POST, PUT, DELETE 등)를 통해 자원에 대한 행위를 정의합니다.

## 주요 특징

1. **자원 (Resource):** 모든 것이 자원으로 표현됩니다. 각 자원은 고유한 URI(Uniform Resource Identifier)를 가지고 있으며, 이를 통해 자원을 식별합니다.
2. **행위 (Verb):** HTTP 메서드(GET, POST, PUT, DELETE 등)를 사용하여 자원에 대한 행위를 정의합니다. 예를 들어, GET은 자원을 조회하고, POST는 자원을 생성하는 등의 작업을 수행합니다.

3. **표현 (Representation):** 클라이언트와 서버 간의 자원 상태는 JSON, XML, HTML 등의 형태로 전송됩니다. 이를 통해 클라이언트가 자원의 상태를 이해하고 조작할 수 있습니다.

## 작동 방식

1. **클라이언트 요청:** 클라이언트는 HTTP 메서드를 사용하여 서버에 요청을 보냅니다. 이 요청은 URI를 포함하고 있어야 하며, 필요에 따라 데이터를 함께 전송할 수 있습니다.

2. **서버 처리:** 서버는 클라이언트의 요청을 받고, 해당 요청에 따라 필요한 작업을 수행합니다. 이 때, URI와 HTTP 메서드를 기반으로 적절한 자원을 식별하고 처리합니다.

3. **응답 전송:** 서버는 클라이언트에게 HTTP 상태 코드와 함께 요청에 대한 응답을 전송합니다. 이 응답은 클라이언트가 요청한 자원의 상태나 요청을 처리한 결과를 포함하고 있습니다.

## 예시

- **GET /users:** 모든 사용자의 목록을 가져옵니다.
- **POST /users:** 새로운 사용자를 생성합니다.
- **PUT /users/{id}:** 특정 사용자의 정보를 업데이트합니다.
- **DELETE /users/{id}:** 특정 사용자를 삭제합니다.

---

이상으로 REST API에 대한 간단한 소개를 마치겠습니다. RESTful API는 현대 웹 개발에서 매우 중요한 개념이며, 웹 애플리케이션을 개발하거나 사용할 때 꼭 이해해야 할 부분입니다.
